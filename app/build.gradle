apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("Asia/Shanghai"))
}

android {

    useLibrary 'org.apache.http.legacy'
    repositories {
        flatDir {
            dirs 'libs' //就是你放aar的目录地址
            maven { url "https://jitpack.io" }
        }
    }

    compileSdkVersion 25

    buildToolsVersion '27.0.3'


    defaultConfig {
        applicationId "com.points.autorepar"
        minSdkVersion 18 //4.0
        targetSdkVersion 25
        versionCode  71
        versionName "3.6.0.11"

        flavorDimensions "21"

        multiDexEnabled true//添加这行


        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "2c333bb853fee953412917d3", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "umeng", //暂时填写默认值即可.
        ]

        ndk{
            abiFilters("armeabi", "armeabi-v7a", "x86", "mips")
        }



    }

    lintOptions {
        abortOnError false
        disable "ResourceType"
    }

    signingConfigs {


        release {
            storeFile file("./autorepair.jks")
            storePassword "120500"
            keyAlias "hfqf123"
            keyPassword "120500"
        }



        debug {
            storeFile file("./autorepair.jks")
            storePassword "120500"
            keyAlias "hfqf123"
            keyPassword "120500"
        }
    }

    buildTypes {

        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"

            minifyEnabled false
            useProguard false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    output.outputFile = new File(
//                            output.outputFile.parent,
//                            "ganchai-${variant.buildType.name}-${variant.versionName}-${variant.productFlavors[0].name}.apk".toLowerCase())
//                }
//            }

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "AutoRepairHelper.apk"
                }
            }
        }
    }

    productFlavors {
        product{}
        q360{}
        baidu{}
        qq{}
        ali{}
        huawei{}
        oppo{}
        vivo{}
        meizu{}
        xiaomi{}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'
        // This is not necessary unless you have precompiled libraries in your project.
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation files('libs/pinyin4j-2.5.0.jar')
    implementation files('libs/zxing.jar')
    implementation files('libs/SocialSDK_QQ_Simplify.jar')
    implementation files('libs/SocialSDK_WeChat_Simplify.jar')
    implementation files('libs/umeng_shareboard_widget.jar')
    implementation files('libs/umeng_social_api.jar')
    implementation files('libs/umeng_social_net.jar')
    implementation files('libs/umeng_social_shareboard.jar')
    implementation files('libs/umeng_social_tool.jar')
    implementation files('libs/umeng_social_shareview.jar')
    implementation files('libs/bos-android-sdk-1.0.2-src.jar')
    implementation files('libs/bos-android-sdk-1.0.2.jar')
    implementation files('libs/joda-time-1.6.2.jar')
    implementation files('libs/universal-image-loader-1.9.3.jar')
    implementation files('libs/tbs.jar')
    implementation files('libs/BaiduLBS_Android.jar')
    //    compile 'com.android.support:appcompat-v7:27.0.3'
    implementation 'com.umeng.analytics:analytics:latest.integration'
    implementation 'com.wdullaer:materialdatetimepicker:3.0.0'
    implementation 'cn.jiguang.sdk:jpush:3.0.0'
    implementation 'cn.jiguang.sdk:jcore:1.0.0'
    implementation 'com.github.medyo:dynamicbox:1.2@aar'
    implementation 'com.google.code.gson:gson-parent:2.8.0'
    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.contrarywind:Android-PickerView:3.2.5'
    implementation 'com.jph.takephoto:takephoto_library:4.0.3'
    implementation files('libs/ocr-sdk.jar')
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.zyao89:zloading:1.1.2'

    implementation (name:'multi-image-selector-debug',ext:'aar')
    implementation 'top.zibin:Luban:1.1.8'

    implementation 'com.github.dfqin:grantor:2.1.0'
    implementation 'com.dyhdyh.loadingbar:loadingbar:1.4.4'
    // From node_modules.
    implementation(name: 'ncalendar-release', ext: 'aar')

    implementation 'de.greenrobot:eventbus:2.2.1'
    implementation 'com.just.agentweb:agentweb:4.0.2'

    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'

    implementation 'com.github.lygttpod:SuperTextView:2.1.7'
    implementation 'com.squareup.picasso:picasso:2.4.0'
    implementation 'com.squareup.okhttp:okhttp:2.4.0'
    implementation 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    implementation 'com.squareup.picasso:picasso:2.4.0'

}